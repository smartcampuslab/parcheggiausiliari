html
   head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src="http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js")
    script(src="/socket.io/socket.io.js",type='text/javascript')
    script(src="/javascripts/jquery.js",type='text/javascript')
    script(src="/javascripts/jquery.flot.js",type='text/javascript')
    script(src="http://code.highcharts.com/highcharts.js")
    script(src="http://code.highcharts.com/modules/exporting.js")
  body
    
    h1 DashBoard


    block content
        div#graph(style="width:600px;height:300px;")
        script(type='text/javascript').
          var socket = io.connect();           
          var chart = null;
          var actualDate = new Date();
          function addChartData(chartData) {
          console.log(JSON.stringify(chartData));
            if(chart != null && chartData.entity_id != null) {                
              var index = serieIndex(chartData.entity_id);
              var series; 
              if(index >= 0) {
                console.log("found series "+ index);
                series = chart.series[index];
              } else {
                series = addNewSerie(chartData.entity_id);
              }
              // check if new entry is realy newer than last entry
              var isFuture = true;
              var length = series.data.length;
              /*if(length == 1) {
                // remove testdata
                if(new Date(series.data[0].x).getTime()==actualDate.getTime()) { 
                  console.log("no new data");                 
                  series.data[0].remove();
                }
                length = series.data.length;
              }*/
              if(length > 0) {
                // isFuture = new Date(chartData.receive_timestamp).getTime() > new Date(series.data[length-1].x).getTime();
              }
              isFuture = true;
              if(isFuture) {
                // chartData.receive_timestamp
                var x = new Date().getTime();
                var y = parseInt(chartData.datacol3);                             
                series.addPoint([x, y], true,false); 
                console.log("added point " + x +" " + chartData.datacol3);      
              }
              
            }
          };
        
          chart = new Highcharts.Chart({
            chart: {
              renderTo: 'graph',
              type: 'spline',
              marginRight: 10,
              events: addChartData(null)
            },
            title: {
              text: 'Corso Antonio Rosmini Parks'
            },
            xAxis: {
              type: 'datetime',
              tickPixelInterval: 100
            },
            yAxis: {
              min: 0,
              max: 100,
              tickInterval: 10,
              title: {
                text: 'Parks'
              }
            },
            plotOptions: {
                spline: {
                    lineWidth: 1,
                    marker: {
                        enabled: true
                    },
                    states: {
                        hover: {
                            lineWidth: 3
                        }
                    },
                }
            },
            tooltip: {
              enabled: true,
              formatter: function() {
                  return '<b>'+ this.series.name +'</b><br/>'+
                  Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
                  Highcharts.numberFormat(this.y, 2);
              }
            },
            legend: {
              enabled: true
            },
            exporting: {
              enabled: false
            },
            series: [/*{
              name: 'Room3',
              data: (function() {
                // generate an array of random data
                var data = [];
                data.push({
                  x: new Date(),
                  y: 50
                });
                data.push({
                  x: new Date(),
                  y: 10
                });
                data.push({
                  x: new Date(),
                  y: 20
                });
                data.push({
                  x: new Date(),
                  y: 15
                });
                return data;
              }())
            }*/]
          });
          function serieIndex(seriesName) {
              for (var i = 0; i < chart.series.length; i++) {
                if(chart.series[i].name == seriesName) {
                  return i;
                }
              }
              return -1;
          }
          function addNewSerie(newName) {
            return chart.addSeries({
              name: newName,
             /* data: (function() {                
                var data = [];
                data.push({
                  x: actualDate.getTime(),
                  y: 50
                });
                return data;
              })(),*/
              id: Math.floor(Math.random()*1000)
            });
            chart.redraw();
          }
          socket.on('chart', function (data) { 
              if(!$.isArray(data.chartData)) {
                addChartData(data.chartData);
              } else {
                console.log("Array not supported !!!!!")
              }
          });


